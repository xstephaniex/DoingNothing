Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> eval
Rule 1     eval -> empty
Rule 2     eval -> connect_client
Rule 3     eval -> create_server
Rule 4     eval -> send_message
Rule 5     eval -> wait_response
Rule 6     eval -> wait_request
Rule 7     eval -> send_response
Rule 8     eval -> close
Rule 9     eval -> kill_connection
Rule 10    empty -> <empty>
Rule 11    connect_client -> CONNECT IDENTIFIER TO PORT COMMA IP_V4
Rule 12    connect_client -> CONNECT IDENTIFIER TO LP PORT COMMA IP_V4 RP
Rule 13    send_message -> SEND MESSAGE CONTENT
Rule 14    send_message -> SEND MESSAGE LP CONTENT RP
Rule 15    create_server -> CREATE IDENTIFIER AT PORT COMMA IP_V4
Rule 16    create_server -> CREATE IDENTIFIER AT LP PORT COMMA IP_V4 RP
Rule 17    wait_response -> WAIT RESPONSE
Rule 18    wait_request -> WAIT REQUEST
Rule 19    send_response -> SEND RESPONSE MESSAGE CONTENT
Rule 20    send_response -> SEND RESPONSE MESSAGE LP CONTENT RP
Rule 21    close -> EXIT
Rule 22    kill_connection -> KILL IDENTIFIER

Terminals, with rules where they appear

AT                   : 15 16
COMMA                : 11 12 15 16
CONNECT              : 11 12
CONTENT              : 13 14 19 20
CREATE               : 15 16
EXIT                 : 21
IDENTIFIER           : 11 12 15 16 22
IP_V4                : 11 12 15 16
KILL                 : 22
LP                   : 12 14 16 20
MESSAGE              : 13 14 19 20
PORT                 : 11 12 15 16
REQUEST              : 18
RESPONSE             : 17 19 20
RP                   : 12 14 16 20
SEND                 : 13 14 19 20
TO                   : 11 12
WAIT                 : 17 18
error                : 

Nonterminals, with rules where they appear

close                : 8
connect_client       : 2
create_server        : 3
empty                : 1
eval                 : 0
kill_connection      : 9
send_message         : 4
send_response        : 7
wait_request         : 6
wait_response        : 5

Parsing method: LALR

state 0

    (0) S' -> . eval
    (1) eval -> . empty
    (2) eval -> . connect_client
    (3) eval -> . create_server
    (4) eval -> . send_message
    (5) eval -> . wait_response
    (6) eval -> . wait_request
    (7) eval -> . send_response
    (8) eval -> . close
    (9) eval -> . kill_connection
    (10) empty -> .
    (11) connect_client -> . CONNECT IDENTIFIER TO PORT COMMA IP_V4
    (12) connect_client -> . CONNECT IDENTIFIER TO LP PORT COMMA IP_V4 RP
    (15) create_server -> . CREATE IDENTIFIER AT PORT COMMA IP_V4
    (16) create_server -> . CREATE IDENTIFIER AT LP PORT COMMA IP_V4 RP
    (13) send_message -> . SEND MESSAGE CONTENT
    (14) send_message -> . SEND MESSAGE LP CONTENT RP
    (17) wait_response -> . WAIT RESPONSE
    (18) wait_request -> . WAIT REQUEST
    (19) send_response -> . SEND RESPONSE MESSAGE CONTENT
    (20) send_response -> . SEND RESPONSE MESSAGE LP CONTENT RP
    (21) close -> . EXIT
    (22) kill_connection -> . KILL IDENTIFIER

    $end            reduce using rule 10 (empty -> .)
    CONNECT         shift and go to state 11
    CREATE          shift and go to state 12
    SEND            shift and go to state 13
    WAIT            shift and go to state 14
    EXIT            shift and go to state 15
    KILL            shift and go to state 16

    eval                           shift and go to state 1
    empty                          shift and go to state 2
    connect_client                 shift and go to state 3
    create_server                  shift and go to state 4
    send_message                   shift and go to state 5
    wait_response                  shift and go to state 6
    wait_request                   shift and go to state 7
    send_response                  shift and go to state 8
    close                          shift and go to state 9
    kill_connection                shift and go to state 10

state 1

    (0) S' -> eval .



state 2

    (1) eval -> empty .

    $end            reduce using rule 1 (eval -> empty .)


state 3

    (2) eval -> connect_client .

    $end            reduce using rule 2 (eval -> connect_client .)


state 4

    (3) eval -> create_server .

    $end            reduce using rule 3 (eval -> create_server .)


state 5

    (4) eval -> send_message .

    $end            reduce using rule 4 (eval -> send_message .)


state 6

    (5) eval -> wait_response .

    $end            reduce using rule 5 (eval -> wait_response .)


state 7

    (6) eval -> wait_request .

    $end            reduce using rule 6 (eval -> wait_request .)


state 8

    (7) eval -> send_response .

    $end            reduce using rule 7 (eval -> send_response .)


state 9

    (8) eval -> close .

    $end            reduce using rule 8 (eval -> close .)


state 10

    (9) eval -> kill_connection .

    $end            reduce using rule 9 (eval -> kill_connection .)


state 11

    (11) connect_client -> CONNECT . IDENTIFIER TO PORT COMMA IP_V4
    (12) connect_client -> CONNECT . IDENTIFIER TO LP PORT COMMA IP_V4 RP

    IDENTIFIER      shift and go to state 17


state 12

    (15) create_server -> CREATE . IDENTIFIER AT PORT COMMA IP_V4
    (16) create_server -> CREATE . IDENTIFIER AT LP PORT COMMA IP_V4 RP

    IDENTIFIER      shift and go to state 18


state 13

    (13) send_message -> SEND . MESSAGE CONTENT
    (14) send_message -> SEND . MESSAGE LP CONTENT RP
    (19) send_response -> SEND . RESPONSE MESSAGE CONTENT
    (20) send_response -> SEND . RESPONSE MESSAGE LP CONTENT RP

    MESSAGE         shift and go to state 19
    RESPONSE        shift and go to state 20


state 14

    (17) wait_response -> WAIT . RESPONSE
    (18) wait_request -> WAIT . REQUEST

    RESPONSE        shift and go to state 21
    REQUEST         shift and go to state 22


state 15

    (21) close -> EXIT .

    $end            reduce using rule 21 (close -> EXIT .)


state 16

    (22) kill_connection -> KILL . IDENTIFIER

    IDENTIFIER      shift and go to state 23


state 17

    (11) connect_client -> CONNECT IDENTIFIER . TO PORT COMMA IP_V4
    (12) connect_client -> CONNECT IDENTIFIER . TO LP PORT COMMA IP_V4 RP

    TO              shift and go to state 24


state 18

    (15) create_server -> CREATE IDENTIFIER . AT PORT COMMA IP_V4
    (16) create_server -> CREATE IDENTIFIER . AT LP PORT COMMA IP_V4 RP

    AT              shift and go to state 25


state 19

    (13) send_message -> SEND MESSAGE . CONTENT
    (14) send_message -> SEND MESSAGE . LP CONTENT RP

    CONTENT         shift and go to state 26
    LP              shift and go to state 27


state 20

    (19) send_response -> SEND RESPONSE . MESSAGE CONTENT
    (20) send_response -> SEND RESPONSE . MESSAGE LP CONTENT RP

    MESSAGE         shift and go to state 28


state 21

    (17) wait_response -> WAIT RESPONSE .

    $end            reduce using rule 17 (wait_response -> WAIT RESPONSE .)


state 22

    (18) wait_request -> WAIT REQUEST .

    $end            reduce using rule 18 (wait_request -> WAIT REQUEST .)


state 23

    (22) kill_connection -> KILL IDENTIFIER .

    $end            reduce using rule 22 (kill_connection -> KILL IDENTIFIER .)


state 24

    (11) connect_client -> CONNECT IDENTIFIER TO . PORT COMMA IP_V4
    (12) connect_client -> CONNECT IDENTIFIER TO . LP PORT COMMA IP_V4 RP

    PORT            shift and go to state 29
    LP              shift and go to state 30


state 25

    (15) create_server -> CREATE IDENTIFIER AT . PORT COMMA IP_V4
    (16) create_server -> CREATE IDENTIFIER AT . LP PORT COMMA IP_V4 RP

    PORT            shift and go to state 31
    LP              shift and go to state 32


state 26

    (13) send_message -> SEND MESSAGE CONTENT .

    $end            reduce using rule 13 (send_message -> SEND MESSAGE CONTENT .)


state 27

    (14) send_message -> SEND MESSAGE LP . CONTENT RP

    CONTENT         shift and go to state 33


state 28

    (19) send_response -> SEND RESPONSE MESSAGE . CONTENT
    (20) send_response -> SEND RESPONSE MESSAGE . LP CONTENT RP

    CONTENT         shift and go to state 34
    LP              shift and go to state 35


state 29

    (11) connect_client -> CONNECT IDENTIFIER TO PORT . COMMA IP_V4

    COMMA           shift and go to state 36


state 30

    (12) connect_client -> CONNECT IDENTIFIER TO LP . PORT COMMA IP_V4 RP

    PORT            shift and go to state 37


state 31

    (15) create_server -> CREATE IDENTIFIER AT PORT . COMMA IP_V4

    COMMA           shift and go to state 38


state 32

    (16) create_server -> CREATE IDENTIFIER AT LP . PORT COMMA IP_V4 RP

    PORT            shift and go to state 39


state 33

    (14) send_message -> SEND MESSAGE LP CONTENT . RP

    RP              shift and go to state 40


state 34

    (19) send_response -> SEND RESPONSE MESSAGE CONTENT .

    $end            reduce using rule 19 (send_response -> SEND RESPONSE MESSAGE CONTENT .)


state 35

    (20) send_response -> SEND RESPONSE MESSAGE LP . CONTENT RP

    CONTENT         shift and go to state 41


state 36

    (11) connect_client -> CONNECT IDENTIFIER TO PORT COMMA . IP_V4

    IP_V4           shift and go to state 42


state 37

    (12) connect_client -> CONNECT IDENTIFIER TO LP PORT . COMMA IP_V4 RP

    COMMA           shift and go to state 43


state 38

    (15) create_server -> CREATE IDENTIFIER AT PORT COMMA . IP_V4

    IP_V4           shift and go to state 44


state 39

    (16) create_server -> CREATE IDENTIFIER AT LP PORT . COMMA IP_V4 RP

    COMMA           shift and go to state 45


state 40

    (14) send_message -> SEND MESSAGE LP CONTENT RP .

    $end            reduce using rule 14 (send_message -> SEND MESSAGE LP CONTENT RP .)


state 41

    (20) send_response -> SEND RESPONSE MESSAGE LP CONTENT . RP

    RP              shift and go to state 46


state 42

    (11) connect_client -> CONNECT IDENTIFIER TO PORT COMMA IP_V4 .

    $end            reduce using rule 11 (connect_client -> CONNECT IDENTIFIER TO PORT COMMA IP_V4 .)


state 43

    (12) connect_client -> CONNECT IDENTIFIER TO LP PORT COMMA . IP_V4 RP

    IP_V4           shift and go to state 47


state 44

    (15) create_server -> CREATE IDENTIFIER AT PORT COMMA IP_V4 .

    $end            reduce using rule 15 (create_server -> CREATE IDENTIFIER AT PORT COMMA IP_V4 .)


state 45

    (16) create_server -> CREATE IDENTIFIER AT LP PORT COMMA . IP_V4 RP

    IP_V4           shift and go to state 48


state 46

    (20) send_response -> SEND RESPONSE MESSAGE LP CONTENT RP .

    $end            reduce using rule 20 (send_response -> SEND RESPONSE MESSAGE LP CONTENT RP .)


state 47

    (12) connect_client -> CONNECT IDENTIFIER TO LP PORT COMMA IP_V4 . RP

    RP              shift and go to state 49


state 48

    (16) create_server -> CREATE IDENTIFIER AT LP PORT COMMA IP_V4 . RP

    RP              shift and go to state 50


state 49

    (12) connect_client -> CONNECT IDENTIFIER TO LP PORT COMMA IP_V4 RP .

    $end            reduce using rule 12 (connect_client -> CONNECT IDENTIFIER TO LP PORT COMMA IP_V4 RP .)


state 50

    (16) create_server -> CREATE IDENTIFIER AT LP PORT COMMA IP_V4 RP .

    $end            reduce using rule 16 (create_server -> CREATE IDENTIFIER AT LP PORT COMMA IP_V4 RP .)

